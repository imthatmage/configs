set previewer ~/.config/lf/previewer.sh
set cleaner ~/.config/lf/clear_img.sh

# Basic Settings
set hidden true set ignorecase true
set icons true

# Custom Functions
cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}


cmd paste &{{
    set -- $(cat ~/.local/share/lf/files)
    mode="$1"
    shift
    case "$mode" in
        copy)
            rsync -av --ignore-existing --progress -- "$@" . |
            stdbuf -i0 -o0 -e0 tr '\r' '\n' |
            while IFS= read -r line; do
                lf -remote "send $id echo $line"
            done
            ;;
        move) mv -n -- "$@" .;;
    esac
    rm ~/.local/share/lf/files
    lf -remote "send clear"
}}


cmd mkfile ${{
  printf "File Name: "
  read ans
  $EDITOR $ans
}}

cmd setwallpaper ${{
    setwallpaper "$f"
}}

# Archive bindings
cmd unarchive ${{
  case "$f" in
      *.zip) unzip "$f" ;;
      *.tar.gz) tar -xzvf "$f" ;;
      *.tar.bz2) tar -xjvf "$f" ;;
      *.tar) tar -xvf "$f" ;;
      *) echo "Unsupported format" ;;
  esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar cvzf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

cmd delete ${{
    set -f
    printf "$fx\n"                                        
    printf "delete?[y/n]"
    read ans
    [ $ans = "y" ] && rm -rf $fx
}}


cmd trash %set -f; mv $fx ~/.local/share/Trash/files

# Bindings
map d
map m

map c $code "$f"

map au unarchive

# Basic Functions
map . set hidden!
map dd trash
map <delete> delete
map p paste; clear
map x cut
map y copy
map <enter> open
map R reload
map mf mkfile
map md mkdir
# map C clear

# Movement
map gD cd ~/almlab_sync
map gd cd ~/Downloads
map gp cd ~/almlab_sync/pictures
map gc cd ~/.config
map gr cd ~/almlab_sync/repos
map gt cd ~/.local/share/Trash/files
